from collections import deque

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':
        qu = deque([root])
        flag = 0
        par_dict = {root: None}
        
        while qu and flag < 2:
            cur = qu.popleft()
            if cur == p:
                flag += 1
            if cur == q:
                flag += 1
            
            if cur.left:
                par_dict[cur.left] = cur
                qu.append(cur.left)
            if cur.right:
                par_dict[cur.right] = cur
                qu.append(cur.right)
        
        p_par = set()
        while p:
            p_par.add(p)
            p = par_dict[p]
        
        while q:
            if q in p_par:
                return q
            q = par_dict[q]
